{"version":3,"sources":["ar1.png","Story.js","Header.js","App.js","reportWebVitals.js","index.js"],"names":["Story","story","index","selected","className","src","ar1","target","href","url","text","author","Header","App","useState","stories","setStories","query","setQuery","search","fetch","then","response","json","console","log","newStories","hits","map","result","title","useEffect","onSubmit","event","preventDefault","onChange","value","type","placeholder","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAAe,MAA0B,gCCI1B,SAASA,EAAT,GAA2C,IAA1BC,EAAyB,EAAzBA,MAAyB,EAAlBC,MAAkB,EAAXC,SAC5C,OACE,sBAAKC,UAAU,QAAf,UAGI,qBAAKC,IAAKC,IAHd,IAGsB,6BAAI,oBAAGC,OAAO,SAASC,KAAMP,EAAMQ,IAA/B,UAAqCR,EAAMS,KAA3C,SAEvB,2CAAcT,EAAMU,aCRZ,SAASC,IAKpB,OACI,gCACA,kDACA,6E,MC8DOC,MAjEf,WAAgB,IAAD,EAEiBC,mBAAS,IAF1B,mBAENC,EAFM,KAEGC,EAFH,OAGaF,mBAAS,SAHtB,mBAGNG,EAHM,KAGCC,EAHD,KAKPC,EAAQ,WACZC,MAAM,8CAAD,OAA+CH,IACnDI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACLE,QAAQC,IAAIH,GACZ,IAAMI,EAAaJ,EAASK,KACzBC,KAAI,SAACC,GAAD,MAAa,CAChBnB,KAAMmB,EAAOC,MACbrB,IAAKoB,EAAOpB,IACZE,OAAQkB,EAAOlB,WAGnBK,EAAWU,GACXR,EAASI,EAASL,WAsBtB,OARFc,qBAAU,WACRP,QAAQC,IAAI,sBACX,CAACV,IAEFgB,qBAAU,WACTZ,MACE,IAGD,sBAAKf,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,SACE,cAACQ,EAAD,MAEF,qBAAKR,UAAU,SAAf,SACC,sBAAM4B,SAxBQ,SAACC,GACtBA,EAAMC,iBACNf,KAsBO,SAA8B,uBAAOf,UAAU,YAAY+B,SAnB9C,SAACF,GACnBf,EAASe,EAAM1B,OAAO6B,QAkBkEC,KAAK,OAAOC,YAAY,YAAYF,MAAOnB,QAG/H,qBAAKb,UAAU,aAAf,SACGW,EAAQa,KAAI,SAAC3B,EAAOC,EAAMC,GAAd,OACX,cAACH,EAAD,CAEEE,MAAOA,EACPD,MAAOA,EACPE,SAAUA,GAHLD,YChDFqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c42fbe12.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/ar1.fa2176b3.png\";","import React from \"react\";\r\nimport ar1 from './ar1.png';\r\n\r\n\r\nexport default function Story({ story, index ,selected}) {\r\n  return (\r\n    <div className=\"story\">\r\n      \r\n       \r\n        <img src={ar1} /> <h3><a target=\"_blank\" href={story.url}>{story.text} </a></h3>\r\n       \r\n       <h5>Author : {story.author}</h5>\r\n\r\n     \r\n   \r\n    \r\n  \r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\n\r\n\r\nexport default function Header(){\r\n\r\n  \r\n\r\n\r\n    return(\r\n        <div>\r\n        <h1>./ Technormation</h1>\r\n        <h2>Search for the hottest tech news today !</h2>\r\n        \r\n        \r\n       </div>\r\n    )\r\n}","import React, { useState, useEffect } from \"react\";\nimport Story from \"./Story\";\nimport Header from \"./Header\";\nimport './App.css';\n\n\n\n\nfunction App() {\n\n  const [stories, setStories] = useState([]);\n  const [query, setQuery] = useState(\"React\");\n\n  const search =()=>{\n    fetch(`https://hn.algolia.com/api/v1/search?query=${query}`)\n    .then((response) => response.json())\n    .then((response) => {\n      console.log(response);\n      const newStories = response.hits\n        .map((result) => ({\n          text: result.title,\n          url: result.url,\n          author: result.author,\n          \n        }))       \n      setStories(newStories);\n      setQuery(response.query);\n    }); \n  }\n\nconst handleSubmit = (event) =>{\nevent.preventDefault()\nsearch()\n}\n\nconst handleChange =(event)=>{\n  setQuery(event.target.value)\n}\n\n\nuseEffect(() => {\n  console.log(\"stories changed!\");\n}, [stories]);\n\n  useEffect(() => {\n   search()\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <div className=\"Header\">\n        <Header />\n      </div>\n      <div className=\"Search\">\n       <form onSubmit={handleSubmit}><input className=\"inputText\" onChange={handleChange} type=\"text\" placeholder=\"Search...\" value={query} />\n       </form>\n      </div>\n      <div className=\"story-list\">        \n        {stories.map((story, index,selected) => (\n          <Story\n            key={index}\n            index={index}\n            story={story}\n            selected={selected}\n      \n          />\n        ))}\n      </div>\n     \n    </div>\n  );\n}\n\nexport default App ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}